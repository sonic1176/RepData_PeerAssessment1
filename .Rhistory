install.packages("sqldf")
con<-dbConnect(sqldf())
library(RSQLite)
con<-dbConnect(sqldf())
con<-dbConnect("getdata_data_ss06pid.csv")
acs<-read.csv()
acs<-read.csv("./GaCDQ2/getdata_data_ss06pid.csv")
head(acs)
sqldf("select pwgtp1 from acs where AGEP < 50")
install.packages("sqldf")
sqldf("select pwgtp1 from acs where AGEP < 50")
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select * from acs where AGEP < 50 and pwgtp1")
head(acs)
unique(acs$AGEP)
sqldf("select distinct AGEP from acs")
con<-url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode=readlines(con, c(10,20,30,100))
htmlCode=readlines(con)
htmlCode=readLines(con, c(10, 20,30,100))
nchar(htmlCode)
htmlCode=readLines(con, n=c(10, 20,30,100))
htmlCode
htmlCode=readLines(con)
nchar(htmlCode[c(10,20,30,100)])
con<-url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
x<-readLines(con)
x
head(x)
y<-substr(x, 20, 5)
y
y<-substr(x, 20, 25)
y
y<-substr(x, 21, 25)
y<-as.numeric(substr(x, 21, 25))
y
sum(y)
y<-as.numeric(substr(x[5:], 21, 25))
y<-as.numeric(substr(x[5:n], 21, 25))
y<-as.numeric(substr(x[5], 21, 25))
y
y<-as.numeric(substr(x[4], 21, 25))
summary(y)
y<-as.numeric(substr(x, 21, 25))
sum(y[!is.na(y)])
head(x)
z<-substr(x, 50, 60)
head(z)
z<-substr(x, 59, 64)
head(z)
z<-as.numeric(z)
sum(z[!is.na(z)])
head(z)
z<-substr(x, 59, 70)
summary(z)
z<-as.numeric(z)
summary(z)
str(z)
sum(z[5:1258])
z<-substr(x, 58, 70)
z<-as.numeric(z)
sum(z[5:1258])
summary(y)
y[5:1258]
y<-as.numeric(substr(x[4], 21, 25))
head(x)
head(substr(x, 25, 30)
)
head(substr(x, 29, 33)
)
head(substr(x, 29, 32))
y<-as.numeric(substr(x[4], 29, 32))
sum(y, na.rm=T)
summary(y)
y<-as.numeric(substr(x, 29, 32))
summary(y)
sum(y, na.rm=T)
swirl()
library(swirl)
rm(list=ls())
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs=0.99)
top_counts <- filter(pack_sum, count>679)
top_counts
View(top_counts)
top_counts_sorted <- <-
top_counts_sorted <- arrange(top_counts, count)
top_counts_sorted <- arrange(top_counts, desc(count)
)
View(top_counts)
View(top_counts_sorted)
quantile(pack_sum$unique, probs=0.99)
top_unique <- filter(pack_sum, unique>465)
View(top_unique)
arrange(top_unique, unique())
top_unique <- arrange(top_unique, unique)
top_unique <- arrange(top_unique, desc(unique))
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
submit()
source("plot1.R")
library(lattice)
library(nlme)
xyplot(weight ~ Time | Diet, BodyWeight)
head(weight)
head(diet)
View(my)
View(cs)
View(mx)
View(rmx)
head(BodyWeight)
table(BodyWeight$Rat, BodyWeight$Diet)
table(BodyWeight$Diet, BodyWeight$Rat)
table(BodyWeight$Diet, BodyWeight$Time)
library(datasets)
qplot(Wind, Ozone, data = airquality)
library(ggplot2)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
library(dplyr)
oldwd <- getwd()
setwd("d:/Dokumente/R/ExDataA2")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
head (NEI)
head(SCC)
head(SCC)
table(SCC$EI.Sector)
table(SCC$EI.Sector[gepl(SCC$EI.Sector, "coal")])
table(SCC$EI.Sector[grepl("coal", SCC$EI.Sector)])
SCC$EI.Sector[grepl("coal", SCC$EI.Sector)]
str(SCC)
SCC$Data.Category[grepl("coal", SCC$Data.Category)]
SCC$Short.Name[grepl("coal", SCC$Short.Name)]
head(SCC)
SCC$Short.Name[grepl("[Cc]oal", SCC$Short.Name)]
fSCC <- SCC[grepl("[Cc]oal", SCC$Short.Name), 1]
head(fSCC)
data <- merge(NEI, fSCC)
fSCC <- SCC[grepl("[Cc]oal", SCC$Short.Name), ]
head(fSCC)
tail(fSCC)
table(fSCC$Data.Category)
table(SCC$Data.Category)
data <- merge(NEI, fSCC)
head(data)
tail(data)
summary(NEI)
summary(data)
fSCC <- SCC[grepl("[Cc]oal", SCC$Short.Name), 1:1]
head(fSCC)
fSCC <- SCC[grepl("[Cc]oal", SCC$Short.Name), ]
fSCC <- SCC[grepl("[Cc]oal", SCC$Short.Name), 1:3]
head(fSCC)
fSCC <- SCC[grepl("[Cc]oal", SCC$Short.Name), c(1, 3)]
head(fSCC)
fSCC <- SCC[grepl("[Cc]oal", SCC$Short.Name), c(1, 3)]
data <- merge(NEI, fSCC)
data$year <- as.factor(bcd$year)
barplot(tapply(data$Emissions, data$year, sum), ylab="Total Emissions PM 2.5")
dev.copy(png, "plot4.png", width=480, height=480)
dev.off()
barplot(tapply(data$Emissions, data$year, sum), ylab="Emissions PM 2.5", main="Coal-Related pollution")
fSCC <- SCC[!grepl("[Cc]oal", SCC$Short.Name), c(1, 3)]
data <- merge(NEI, fSCC)
data$year <- as.factor(bcd$year)
barplot(tapply(data$Emissions, data$year, sum), ylab="Emissions PM 2.5", main="Coal-Related pollution")
data$year <- as.factor(data$year)
barplot(tapply(data$Emissions, data$year, sum), ylab="Emissions PM 2.5", main="Coal-Related pollution")
fSCC <- SCC[grepl("[Cc]oal", SCC$Short.Name), c(1, 3)]
data <- merge(NEI, fSCC)
data$year <- as.factor(data$year)
barplot(tapply(data$Emissions, data$year, sum), ylab="Emissions PM 2.5", main="Coal-Related pollution")
dev.copy(png, "plot4.png", width=480, height=480)
dev.off()
axis(label=format(, scientific=FALSE))
axis(1,label=format(, scientific=FALSE))
axis(x,label=format(, scientific=FALSE))
axis(2,label=format(, scientific=FALSE))
format(data$Emmissions, scientific = F)
barplot(tapply(data$Emissions, data$year, sum), ylab="Emissions PM 2.5", main="Coal-Related pollution")
data$Emmissions <- format(data$Emmissions, scientific = F)
barplot(tapply(data$Emissions, data$year, sum), ylab="Emissions PM 2.5", main="Coal-Related pollution")
barplot(format(tapply(data$Emissions, data$year, sum), scientific = F), ylab="Emissions PM 2.5", main="Coal-Related pollution")
fSCC <- SCC[grepl("[Cc]oal", SCC$Short.Name), c(1, 3)]
data <- merge(NEI, fSCC)
data$year <- as.factor(data$year)
barplot(tapply(data$Emissions, data$year, sum), ylab="Emissions PM 2.5", main="Coal-Related pollution")
dev.copy(png, "plot4.png", width=480, height=480)
dev.off()
SCC[grepl("motor", SCC), ]
SCC[grepl("motor", SCC$Short.Name), ]
SCC
head(SCC)
head(SCC[, c(1, 3, 4, 5, 6, 7, 10)])
SCC$Short.Name
table(SCC$SCC.Level.One)
table(SCC$SCC.Level.Two[SCC$SCC.Level.One=="Mobile Sources"])
SCC$SCC.Level.Two[SCC$SCC.Level.One=="Mobile Sources"]
SCC$SCC.Level.Two[SCC$SCC.Level.One=="Mobile Sources", ]
SCC[SCC$SCC.Level.One=="Mobile Sources", ]
SCC[SCC$SCC.Level.One=="Mobile Sources", c(1:10)]
f <- SCC[SCC$SCC.Level.One=="Mobile Sources", c(1:10)]
table(f$SCC.Level.Two)
table(f$SCC.Level.One, f$SCC.Level.Two)
write.csv(SCC, file("test.csv"))
bcd <- NEI[NEI$fips==24510,]
fSCC <- SCC[grepl("[Vv]ehicle", SCC$EI.Sector), c(1, 3)]
data <- merge(bcd, fSCC)
data$year <- as.factor(data$year)
barplot(tapply(data$Emissions, data$year, sum), ylab="Emissions PM 2.5", main="Coal-Related pollution")
dev.copy(png, "plot5.png", width=480, height=480)
dev.off()
barplot(tapply(data$Emissions, data$year, sum), ylab="Emissions PM 2.5", main="Emission by Vehicle Sources")
dev.copy(png, "plot5.png", width=480, height=480)
dev.off()
barplot(tapply(data$Emissions, data$year, sum), ylab="Emissions PM 2.5", main="Emission by Motor Vehicle Sources")
dev.copy(png, "plot5.png", width=480, height=480)
dev.off()
bcd <- NEI[NEI$fips==24510 | NEI$fips==06037,]
fSCC <- SCC[grepl("[Vv]ehicle", SCC$EI.Sector), c(1, 3)]
bcd$year <- as.factor(bcd$year)
data <- merge(bcd, fSCC)
agg <- data %>%
select(year, fips, Emissions) %>%
group_by(year, fips) %>%
summarize(emission = sum(Emissions))
g <- ggplot(agg, aes(year, emission))
g + geom_point(size=4, alpha=0.5) +
facet_grid(.~type) + theme_bw() +
labs(y="Emissions PM 2.5", title="Baltimores Emissions by Type")
g + geom_point(size=4, alpha=0.5) +
facet_grid(.~fips) + theme_bw() +
labs(y="Emissions PM 2.5", title="Baltimores Emissions by Type")
head(bcd)
tail(bcd)
bcd <- NEI[NEI$fips==24510 | NEI$fips==6037,]
head(bcd)
tail(bcd)
bcd <- NEI[NEI$fips==6037,]
head(bcd)
bcd <- NEI[NEI$fips==06037,]
head(bcd)
head(NEI)
NEI[NEI$fips==09001]
NEI[NEI$fips==09001, ]
NEI[NEI$fips=="09001", ]
str(NEI)
bcd <- NEI[NEI$fips=="24510" | NEI$fips=="06037",]
fSCC <- SCC[grepl("[Vv]ehicle", SCC$EI.Sector), c(1, 3)]
bcd$year <- as.factor(bcd$year)
data <- merge(bcd, fSCC)
agg <- data %>%
select(year, fips, Emissions) %>%
group_by(year, fips) %>%
summarize(emission = sum(Emissions))
g <- ggplot(agg, aes(year, emission))
g + geom_point(size=4, alpha=0.5) +
facet_grid(.~fips) + theme_bw() +
labs(y="Emissions PM 2.5", title="Baltimores Emissions by Type")
g + geom_point(size=4, alpha=0.5) +
facet_grid(.~fips, labeller = c("Los Angeles", "Baltimore")) + theme_bw() +
labs(y="Emissions PM 2.5", title="Baltimores Emissions by Type")
ls()
rm(my)
g + geom_point(size=4, alpha=0.5) +
facet_grid(.~fips)+
theme_bw() +
annotate(label=c("LA", "BC")) +
labs(y="Emissions PM 2.5", title="Baltimores Emissions by Type")
g + geom_point(size=4, alpha=0.5) +
facet_grid(.~fips)+
theme_bw() +
annotate("text", label=c("LA", "BC")) +
labs(y="Emissions PM 2.5", title="Baltimores Emissions by Type")
library(lattice)
xyplot(year ~ emission | fips, layout=c(2,2))
xyplot(agg$year ~ agg$emission | agg$fips, layout=c(2,2))
xyplot(agg$emission ~ agg$year | agg$fips, layout=c(2,2))
xyplot(agg$emission ~ agg$year | agg$fips, layout=c(2,2))
xyplot(agg$emission ~ agg$year | agg$fips, layout=c(2,1))
agg$fips <- factor(agg$fips, labels = c("Los Angeles", "Baltimore"))
xyplot(agg$emission ~ agg$year | agg$fips, layout=c(2,1))
xyplot(agg$emission ~ agg$year | agg$fips, layout=c(2,1), scales=list(alternating=FALSE))
xyplot(emission ~ year | fips, agg, layout=c(2,1), scales=list(alternating=FALSE))
dev.copy(png, "plot6.png", width=640, height=480)
dev.off()
agg$fips <- factor(agg$fips, labels = c("Los Angeles County", "Baltimore City"))
xyplot(emission ~ year | fips, agg, layout=c(2,1), scales=list(alternating=FALSE))
dev.copy(png, "plot6.png", width=640, height=480)
dev.off()
xyplot(emission ~ year | fips, agg,
xlab="Year",
ylab="Emission PM2.5",
layout=c(2,1),
scales=list(alternating=FALSE))
xyplot(emission ~ year | fips, agg,
xlab="Year",
ylab="Emission PM2.5",
title="D"
layout=c(2,1),
scales=list(alternating=FALSE))
xyplot(emission ~ year | fips, agg,
xlab="Year",
ylab="Emission PM2.5",
title="D",
layout=c(2,1),
scales=list(alternating=FALSE))
xyplot(emission ~ year | fips, agg,
xlab="Year",
ylab="Emission PM2.5",
main="D",
layout=c(2,1),
scales=list(alternating=FALSE))
agg$fips <- factor(agg$fips, labels = c("Los Angeles County", "Baltimore City"))
xyplot(emission ~ year | fips, agg,
xlab="Year",
ylab="Emission PM2.5",
main="Comparison for Motor Vehicle Emissions",
layout=c(2,1),
scales=list(alternating=FALSE))
dev.copy(png, "plot6.png", width=640, height=480)
dev.off()
barplot(tapply(NEI$Emissions, NEI$year, sum), ylab="Total Emissions PM 2.5")
barplot(tapply(NEI$Emissions, NEI$year, sum), ylab="Emissions PM 2.5", main="Total Emissions United States")
# print plot to png-file
dev.copy(png, "plot1.png", width=480, height=480)
dev.off()
#set old working directory
setwd(oldwd)
bcd <- NEI[NEI$fips==24510,]
# create an aggregated table printed as bars
barplot(tapply(bcd$Emissions, bcd$year, sum), ylab="Total Emissions PM 2.5", main="Baltimore City Data")
# print plot to png-file
dev.copy(png, "plot2.png", width=480, height=480)
dev.off()
bcd <- NEI[NEI$fips==24510,]
# Filter if vehicle or Vehicle is in string of Short.Name
fSCC <- SCC[grepl("[Vv]ehicle", SCC$EI.Sector), c(1, 3)]
# Merge data (excluding nonrelevant datasets caused by filtering)
data <- merge(NEI, fSCC)
# coerce year to factor to avoid continuous scaling of year
data$year <- as.factor(data$year)
# create an aggregated table printed as bars
barplot(tapply(data$Emissions, data$year, sum), ylab="Emissions PM 2.5", main="Emission by Motor Vehicle Sources")
# print plot to png-file
dev.copy(png, "plot5.png", width=480, height=480)
dev.off()
bcd <- NEI[NEI$fips==24510,]
# Filter if vehicle or Vehicle is in string of Short.Name
fSCC <- SCC[grepl("[Vv]ehicle", SCC$EI.Sector), c(1, 3)]
# Merge data (excluding nonrelevant datasets caused by filtering)
data <- merge(bcd, fSCC)
# coerce year to factor to avoid continuous scaling of year
data$year <- as.factor(data$year)
# create an aggregated table printed as bars
barplot(tapply(data$Emissions, data$year, sum), ylab="Emissions PM 2.5", main="Emission by Motor Vehicle Sources")
# print plot to png-file
dev.copy(png, "plot5.png", width=480, height=480)
dev.off()
# filter Baltimore and LA data
bcd <- NEI[NEI$fips=="24510" | NEI$fips=="06037",]
# Filter if vehicle or Vehicle is in string of Short.Name
fSCC <- SCC[grepl("[Vv]ehicle", SCC$EI.Sector), c(1, 3)]
# coerce year to factor to avoid continuous scaling of year
bcd$year <- as.factor(bcd$year)
# Merge data (excluding nonrelevant datasets caused by filtering)
data <- merge(bcd, fSCC)
#Aggregate by using dplyr
agg <- data %>%
select(year, fips, Emissions) %>%
group_by(year, fips) %>%
summarize(emission = sum(Emissions))
# Coerce fips to factor and setting labels
agg$fips <- factor(agg$fips, labels = c("Los Angeles County", "Baltimore City"))
#create Chart
xyplot(emission ~ year | fips, agg,
xlab="Year",
ylab="Emission PM2.5",
main="Comparison for Motor Vehicle Emissions",
layout=c(2,1),
scales=list(alternating=FALSE))
# print plot to png-file
dev.copy(png, "plot6.png", width=640, height=480)
dev.off()
table(agg$year, agg$fips, agg$emission)
agg
rm(ls())
ls()
rm(ls)
rm(ls[1:10])
rm(NEI)
rm(bcd)
rm(SCC)
oldwd <- getwd()
setwd("c:/Users/Sonic/r/repdata_peerassessment1")
df <- read.csv(unz("activity.zip", "activity.csv"))
sumStepsDay <- tapply(df$steps, df$date, sum)
hist(sumStepsDay, xlab="steps", main="Distribution of Total Steps per Day")
mean(sumStepsDay, na.rm=T)
median(sumStepsDay, na.rm=T)
#barplot(tapply(df$steps, df$date, sum), main="Total number of steps per day")
meanStepsInterval <- tapply(df$steps, df$interval, mean, na.rm=T)
plot(names(meanStepsInterval), meanStepsInterval, type="l", xlab="Interval", ylab="Average Steps", main="Average Daily Activity Pattern")
dfMeanSteps <- aggregate(x=df$steps, by=list(df$interval), mean, na.rm=T)
names(dfMeanSteps) <- c("interval", "cleanedSteps")
dfCleaned <- merge(df, dfMeanSteps)
dfCleaned$steps[is.na(dfCleaned$steps)] <- dfCleaned$cleanedsteps[is.na(dfCleaned$steps)]
View(dfCleaned)
View(dfCleaned)
dfCleaned$steps[is.na(dfCleaned$steps)] <- dfCleaned$cleanedSteps[is.na(dfCleaned$steps)]
View(dfCleaned)
View(dfCleaned)
View(df)
View(df)
dfCleaned <- merge(df, dfMeanSteps)
View(dfCleaned)
View(dfCleaned)
dfCleaned$steps[is.na(dfCleaned$steps)] <- dfCleaned$cleanedSteps[is.na(dfCleaned$steps)]
sumCleanedStepsDay <- tapply(dfCleaned$steps, dfCleaned$date, sum)
hist(sumCleanedStepsDay, xlab="steps", main="Distribution of Total Steps per Day (cleaned data")
mean(sumCleanedStepsDay, na.rm=T)
median(sumCleanedStepsDay, na.rm=T)
library("lubridate")
df$weekend <- ifelse(wday(ymd(df$date)) %in% c(1,7), "weekend", "weekday")
library("lattice")
library("dplyr")
agg <- df %>%
select(weekend, interval, steps) %>%
filter(!is.na(steps)) %>%
group_by(weekend, interval) %>%
summarize(steps=mean(steps))
xyplot(steps ~ interval | weekend, agg, type="l", layout=c(1,2))
ls()
rm(ls())
ls
ls()
rm(list=ls())
df <- read.csv(unz("activity.zip", "activity.csv"))
sumStepsDay <- tapply(df$steps, df$date, sum)
hist(sumStepsDay, xlab="steps", main="Distribution of Total Steps per Day")
mean(sumStepsDay, na.rm=T)
median(sumStepsDay, na.rm=T)
#barplot(tapply(df$steps, df$date, sum), main="Total number of steps per day")
meanStepsInterval <- tapply(df$steps, df$interval, mean, na.rm=T)
plot(names(meanStepsInterval), meanStepsInterval, type="l", xlab="Interval", ylab="Average Steps", main="Average Daily Activity Pattern")
dfMeanSteps <- aggregate(x=df$steps, by=list(df$interval), mean, na.rm=T)
names(dfMeanSteps) <- c("interval", "cleanedSteps")
dfCleaned <- merge(df, dfMeanSteps)
#alt1
#dfCleaned$cleanedSteps[!is.na(dfCleaned$steps)] <- dfCleaned$steps[!is.na(dfCleaned$steps)]
#dfCleaned <- dfCleaned[, c(4, 3, 1)]
#names(dfCleaned) <- names(df)
#end1
#alt2
dfCleaned$steps[is.na(dfCleaned$steps)] <- dfCleaned$cleanedSteps[is.na(dfCleaned$steps)]
#end2
sumCleanedStepsDay <- tapply(dfCleaned$steps, dfCleaned$date, sum)
hist(sumCleanedStepsDay, xlab="steps", main="Distribution of Total Steps per Day (cleaned data")
mean(sumCleanedStepsDay, na.rm=T)
median(sumCleanedStepsDay, na.rm=T)
library("lubridate")
dfWeekday <- df
dfWeekday$weekend <- ifelse(wday(ymd(df$date)) %in% c(1,7), "weekend", "weekday")
library("lattice")
library("dplyr")
agg <- dfWeekday %>%
select(weekend, interval, steps) %>%
filter(!is.na(steps)) %>%
group_by(weekend, interval) %>%
summarize(steps=mean(steps))
xyplot(steps ~ interval | weekend, agg, type="l", layout=c(1,2))
summary(df)
summary(sumStepsDay)
sumStepsDay
summary(sumcleanedStepsDay)
summary(sumCleanedStepsDay)
sumCleanedStepsDay
rm(list=ls())
